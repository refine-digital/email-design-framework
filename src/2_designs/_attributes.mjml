<!-- File:_attributes.mjml -->
<!--
  Element: <mj-title>
  Description: Defines the title of the email document. This title typically appears in the browser tab or email client window title when the HTML email is opened.
  Documentation: https://documentation.mjml.io/#mj-title
  Notes:
    - This tag is purely for metadata; it does not render visible content within the email body.
    - Important for browser/client tab identification and sometimes for accessibility tools.
-->
<mj-title>
  Email Template Title
</mj-title>

<!--
  Element: <mj-preview>
  Description: Sets the pre-header text for the email, which appears in the inbox preview pane (after the subject line).
  Documentation: https://documentation.mjml.io/#mj-preview
  Notes:
    - Crucial for encouraging email opens.
    - Often stuffed with invisible characters to prevent email clients from pulling visible body text into the preview.
-->
<mj-preview>
  Email template preview text.
</mj-preview>

<!--
  Element: <mj-font>
  Description: Imports custom web fonts from external sources (like Google Fonts) for use in the email.
  Documentation: https://documentation.mjml.io/#mj-font
  Additional Attributes:
    Attribute | Unit | Description | Default Value
    href | string | URL of a hosted CSS file | n/a
    name | string | name of the font | n/a
  Notes:
    - Web font support varies significantly across email clients. Always define a robust `font-family` fallback stack in `mj-attributes` for consistent rendering.
    - Web fonts will often not display in Outlook or older clients, which will revert to fallback fonts.
-->
<mj-font />

<!--
  Element: <mj-breakpoint>
  Description: Defines the breakpoint width (in pixels) at which the email layout switches from desktop to mobile (columns stack).
  Documentation: https://documentation.mjml.io/#mj-breakpoint
  Additional Attributes:
    Attribute | Unit | Description | Default Value
    width | px | breakpoint width | 600px
  Notes:
    - None
  Example:
    <mj-breakpoint width="320px" />
-->

<!--
  Element: <mj-style>
  Description: This tag allows you to set CSS styles that will be applied to the HTML in your MJML document as well as the HTML outputted. The CSS styles will be added to the head of the rendered HTML by default, but can also be inlined by using the inline="inline" attribute.
  Documentation: https://documentation.mjml.io/#mj-style
  Notes:
    - MJML generates multiple html elements from a single mjml element. For optimal flexibility, the `css-class` will be applied to the most outer html element, so if you want to target a specific sub-element with a css selector, you may need to look at the generated html to see which exact selector you need.
  Examples:
<mj-style>
  .class-name div {
    name: my-class;
  }
</mj-style>
<mj-style inline="inline">
  .class-name div {
    name: my-class;
  }
</mj-style>
-->
<mj-style>

  @media (prefers-color-scheme: dark) {
    .content {
      background-color: black!important;
    }
    .p {
      color: white!important;
    }

    .dark-mode-text {
      color: #ffffff !important;
    }
    .dark-mode-background {
      background-color: #333333 !important;
    }
    .dark-mode-image-swap {
      content: url(https://yourdomain.com/dark-logo.png) !important;
    }
  }
</mj-style>


<!--
  Element: <mj-html-attributes>
  Element: <mj-selector>
  Element: <mj-html-attribute>
  Description: These tags allows you to add custom attributes on any html tag of the generated html, using css selectors. It's not needed for most email creations, but can be useful in some cases, i.e. editable templates.
  Documentation: https://documentation.mjml.io/#mj-html-attributes
  Notes:
    - Not for applying styles, but for structural and data HTML attributes.
  Example:
    <mj-html-attributes>
      <mj-selector path=".dataname">
        <mj-html-attribute name="data-id">value</mj-html-attribute>
      </mj-selector>
    </mj-html-attributes>
-->

<mj-attributes>
<!-- Structural Elements -->
  <!--
    Element: <mj-body>
    Description: The primary container for all visible content of the email. It defines the overall canvas for your email.
    Documentation: https://documentation.mjml.io/#mj-body
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      background-color | color | body background-color | n/a
      css-class | string | class name, added to the root HTML element created | n/a
    Notes:
      - None.
  -->
  <mj-body
    width="600px"
    background-color="#fff"
  />
  <!--
    Element: <mj-column>
    Description: Columns enable you to horizontally organize the content within your sections. They must be located under mj-section tags in order to be considered by the engine. To be responsive, columns are expressed in terms of percentage.
    Documentation: https://documentation.mjml.io/#mj-column
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      background-color | color | background color for a column | n/a
      border-bottom | string | css border format | n/a
      border-left | string | css border format | n/a
      border-radius | percent/px | border radius | n/a
      border-right | string | css border format | n/a
      border-top | string | css border format | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      inner-background-color | color | inner background color for column | n/a
      inner-border | string | css border format | n/a
      inner-border-bottom | string | css border format ; requires a padding | n/a
      inner-border-left | string | css border format ; requires a padding | n/a
      inner-border-radius | percent/px | border radius ; requires a padding | n/a
      inner-border-right | string | css border format ; requires a padding | n/a
      inner-border-top | string | css border format ; requires a padding | n/a
      padding | px | supports up to 4 parameters | n/a
      padding-bottom | px | section bottom offset | n/a
      padding-left | px | section left offset | n/a
      padding-right | px | section right offset | n/a
      padding-top | px | section top offset | n/a
    Notes:
      - The sum of columns in a section cannot be greater than the width of the parent `mj-section` (or 100%).
      - Every single column has to contain something because they are responsive containers, and will be vertically stacked on a mobile view. Any standard component, or component that you have defined and registered, can be placed within a column â€“ except mj-column or mj-section elements.
      - Columns are meant to be used as a container for your content. They must not be used as offset. Any mj-element included in a column will have a width equivalent to 100% of this column's width.
      - Columns cannot be nested into columns, and sections cannot be nested into columns as well.
  -->
  <mj-column
    border="none"
    width="100%"
    vertical-align="top"
  />
  <!--
    Element: <mj-group>
    Description: mj-group allows you to prevent columns from stacking on mobile. To do so, wrap the columns inside a mj-group tag, so they'll stay side by side on mobile.
    Documentation: https://documentation.mjml.io/#mj-group
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      background-color | string | background color for a group | n/a
      css-class | string | class name, added to the root HTML element created | n/a
    Notes:
      - Column inside a group must have a width in percentage, not in pixel
      - You can have both column and group inside a Section
      - iOS 9 Issue: If you use a HTML beautifier for MJML output, iOS9 will render your columns inside a mj-group as stacked. On the output HTML, remove the blank space between the two columns inside a mj-group.
  -->
  <mj-group
    vertical-align="top"
    width="100%"
    direction="ltr"
  />
  <!--
    Element: <mj-section>
    Description: Sections are intended to be used as rows within your email. They will be used to structure the layout.
    Documentation: https://documentation.mjml.io/#mj-section
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      background-color | color | section color | n/a
      background-url | url | background url | n/a
      border-bottom | string | css border format | n/a
      border-left | string | css border format | n/a
      border-radius | px | border radius | n/a
      border-right | string | css border format | n/a
      border-top | string | css border format | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      full-width | string | make the section full-width | n/a
      padding-bottom | px | section bottom offset | n/a
      padding-left | px | section left offset | n/a
      padding-right | px | section right offset | n/a
      padding-top | px | section top offset | n/a
    Notes:
      - The `full-width` property will be used to manage the background width. By default, it will be 600px. With the `full-width` property on, it will be changed to 100%.
      - Inverting the order in which columns display: set the `direction` attribute to `rtl` to change the order in which columns display on desktop. Because MJML is mobile-first, structure the columns in the order you want them to stack on mobile, and use `direction` to change the order they display on desktop.
      - Sections cannot nest in sections. Columns can nest in sections; all content must be in a column.
      - Limitations of background-images size and position on Outlook desktop : - If background-size is not specified, no-repeat will be ignored on Outlook. - If the specified size is a single attribute in percent, the height will be auto as in standard css. On outlook, the image will never overflow the element, and it will be shrinked instead of being cropped like on other clients.
  -->
  <mj-section
    background-position="top center"
    background-position-x="none"
    background-position-y="none"
    background-repeat="repeat"
    background-size="auto"
    border="none"
    direction="ltr"
    padding="20px 0"
    text-align="center"
  />
  <!--
    Element: <mj-spacer>
    Description: Displays a blank space.
    Documentation: https://documentation.mjml.io/#mj-spacer
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      container-background-color | color | inner element background color | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      padding-bottom | px | bottom offset | n/a
      padding-left | px | left offset | n/a
      padding-right | px | right offset | n/a
      padding-top | px | top offset | n/a
    Notes:
      - Ideal for controlling vertical rhythm and spacing in a cross-client compatible way.
      - Height attribute is its primary control.
  -->
  <mj-spacer
      height="20px"
      padding="0"
  />
  <!--
    Element: <mj-wrapper>
    Description: Wrapper enables to wrap multiple sections together. It's especially useful to achieve nested layouts with shared border or background images across sections.
    Documentation: https://documentation.mjml.io/#mj-wrapper
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      background-color | color | section color | n/a
      background-url | url | background url | n/a
      border-bottom | string | css border format | n/a
      border-left | string | css border format | n/a
      border-radius | px | border radius | n/a
      border-right | string | css border format | n/a
      border-top | string | css border format | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      padding-bottom | px | section bottom offset | n/a
      padding-left | px | section left offset | n/a
      padding-right | px | section right offset | n/a
      padding-top | px | section top offset | n/a
    Notes:
      - The full-width property will be used to manage the background width. By default, it will be 600px. With the full-width property on, it will be changed to 100%.
      - You can't nest a full-width section inside a full-width wrapper, section will act as a non-full-width section.
      - If you're using a background-url on a `mj-wrapper` then do not add one into a section within the mj-wrapper. Outlook Desktop doesn't support nested VML, so it will most likely break your email. Also, if you use a background-color on mj-wrapper and a background-url on its section/hero child, the background-color will be over the background-image on Outlook desktop. There is no way to keep the vml image under the content and over the wrapper's background-color due to z-index being ignored on most tags.
  -->
  <mj-wrapper
    background-position="top center"
    background-position-x="none"
    background-position-y="none"
    background-repeat="repeat"
    background-size="auto"
    border="none"
    border-radius="0"
    padding="20px 0"
    full-width="false"
    text-align="center"
  />

  <!--
    Basic Content Elements
  -->
  <!--
    Element: <mj-button>
    Description: Displays a customizable button.
    Documentation: https://documentation.mjml.io/#mj-button
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      border-bottom | string | css border format | n/a
      border-left | string | css border format | n/a
      border-right | string | css border format | n/a
      border-top | string | css border format | n/a
      container-background-color | color | button container background color | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      font-style | string | normal/italic/oblique | n/a
      height | px | button height | n/a
      href | link | link to be triggered when the button is clicked | n/a
      letter-spacing | px/em | letter-spacing | n/a
      padding-bottom | px | bottom offset | n/a
      padding-left | px | left offset | n/a
      padding-right | px | right offset | n/a
      padding-top | px | top offset | n/a
      rel | string | specify the rel attribute for the button link | n/a
      title | string | tooltip & accessibility | n/a
      width | px | button width | n/a
    Notes:
      - The `mj-button` won't be fully clickable because of client support. See discussion at Issue #359.
      - `mj-button` is an "ending tag", which means it can contain HTML code which will be left as it is, so it can contain HTML tags with attributes, but it cannot contain other MJML components.
  -->
  <mj-button
    align="center"
    background-color="#414141"
    border="none"
    border-radius="3px"
    color="#ffffff"
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    font-size="13px"
    font-weight="normal"
    inner-padding="10px 25px"
    line-height="120%"
    padding="10px 25px"
    target="_blank"
    text-align="center"
    text-decoration="none"
    text-transform="none"
    vertical-align="middle"
  />

  <!--
    Element: <mj-divider>
    Description: Displays a horizontal divider that can be customized like a HTML border.
    Documentation: https://documentation.mjml.io/#mj-divider
    All Attributes:
      Attribute | Unit | Description | Default Value
      align | string | left/right/center | center
      border-color | color | divider color | #000000
      border-style | string | dashed/dotted/solid | solid
      border-width | px | divider's border width | 4px
      container-background-color | color | inner element background color | n/a
      css-class | string | class name |  added to the root HTML element created | n/a
      padding | px | supports up to 4 parameters | 10px 25px
      padding-bottom | px | bottom offset | n/a
      padding-left | px | left offset | n/a
      padding-right | px | right offset | n/a
      padding-top | px | top offset | n/a
      width | px/percent | divider width | 100%
    Notes:
      - Always provide descriptive `alt` text for accessibility and when images are blocked.
      - Set `width` and `height` attributes to prevent layout shifts and ensure proper rendering in some clients.
      - Images are `display: block;` by default in MJML's output to prevent extra spacing.
  -->
  <mj-divider
    align="center"
    border-color="#000000"
    border-style="solid"
    border-width="4px"
    padding="10px 25px"
    width="100%"
  />

  <!--
    Element: <mj-image>
    Description: Displays a responsive image in your email. It is similar to the HTML <img> tag. Note that if no width is provided, the image will use the parent column width.
    Documentation: https://documentation.mjml.io/#mj-image
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      border-radius | px | border radius | n/a
      container-background-color | color | inner element background color | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      fluid-on-mobile | string | if "true", will be full width on mobile even if width is set | n/a
      href | url | link to redirect to on click | n/a
      name | string | specify the link name attribute | n/a
      padding-bottom | px | bottom offset | n/a
      padding-left | px | left offset | n/a
      padding-right | px | right offset | n/a
      padding-top | px | top offset | n/a
      rel | string | specify the rel attribute | n/a
      sizes | media query & width | set width based on query | n/a
      src | url | image source | n/a
      srcset | url & width | enables to set a different image source based on the viewport | n/a
      title | string | tooltip & accessibility | n/a
      usemap | string | reference to image map, be careful, it isn't supported everywhere | n/a
      width | px | image width | parent width
    Notes:
      - Always provide descriptive `alt` text for accessibility and when images are blocked.
      - Set `width` and `height` attributes to prevent layout shifts and ensure proper rendering in some clients.
      - Images are `display: block;` by default in MJML's output to prevent extra spacing.
  -->
  <mj-image
    align="center"
    alt=""
    border="none"
    border-bottom="none"
    border-left="none"
    border-right="none"
    border-top="none"
    height="auto"
    padding="10px 25px"
    target="_blank"
  />
  <!--
    Element: <mj-table>
    Description: This tag allows you to display table and filled it with data. It only accepts plain HTML.
    Documentation: https://documentation.mjml.io/#mj-table
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      cellpadding | pixels | space between cells | n/a
      cellspacing | pixels | space between cell and border | n/a
      container-background-color | color | inner element background color | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      padding-bottom | percent/px | bottom offset | n/a
      padding-left | percent/px | left offset | n/a
      padding-right | percent/px | right offset | n/a
      padding-top | percent/px | top offset | n/a
      role | none/presentation | specify the role attribute | n/a
    Notes:
      - `mj-table` is an "ending tag", which means it can contain HTML code which will be left as it is, so it can contain HTML tags with attributes, but it cannot contain other MJML components. In `mj-table` specifically, you can put anything you would put in a `<table>` element.
      - For layout purposes, usually include `role="presentation"` on the generated HTML table for accessibility.
  -->
  <mj-table
    align="left"
    border="none"
    color="#000000"
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    font-size="13px"
    line-height="22px"
    padding="10px 25px"
    table-layout="auto"
    width="100%"
  />
  <!--
    Element: <mj-text>
    Description: This tag allows you to display text and HTML in your email.
    Documentation: https://documentation.mjml.io/#mj-text
    Additional Attributes:
    Attribute | Unit | Description | Default Value
    container-background-color | color | inner element background color | n/a
    css-class | string | class name, added to the root HTML element created | n/a
    font-style | string | normal/italic/oblique | n/a
    font-weight | number | text thickness | n/a
    height | px | The height of the element | n/a
    letter-spacing | px/em | letter spacing | none
    padding-bottom | px | bottom offset | n/a
    padding-left | px | left offset | n/a
    padding-right | px | right offset | n/a
    padding-top | px | top offset | n/a
    text-decoration | string | underline/overline/line-through/none | n/a
    text-transform | string | uppercase/lowercase/capitalize | n/a
    Notes:
    - One of the most frequently used components for all textual content.
    - Supports basic HTML tags like `<a>`, `<strong>`, `<em>` within its content.
    - Ensure `line-height` is explicitly set for consistent rendering across clients.
    - `mj-text` is an "ending tag", which means it can contain HTML code which will be left as it is, so it can contain HTML tags with attributes, but it cannot contain other MJML components.
    - Compiler note: `letter-spacing` might behave unexpectedly or not display a '0px' default in the compiled output despite being documented as `0px`.
   -->
   <mj-text
      align="left"
      color="#000000"
      font-family="Ubuntu, Helvetica, Arial, sans-serif"
      font-size="13px"
      line-height="1"
      padding="10px 25px"
   />

  <!--
    Compound Elements
  -->

  <!--
    Element: <mj-hero>
    Description: This element displays a hero image.
    Documentation: https://documentation.mjml.io/#mj-hero
    Notes:
      - This element displays a hero image. It behaves like an mj-section with a single mj-column.
    - background-height and background-width attributes are mandatory.

    - It's best to use an image with width the same as the mj-body width (width="600px" by default). For better results, it's best to use an image with height the same or larger than the height of mj-hero.

    - Use background-color to provide a fallback color in case an email client doesn't support background-url.
  -->
  <!--
    Element: <mj-hero>
    Description:
    Documentation: https://documentation.mjml.io/#mj-hero
    Attributes:
    Attribute | Unit | Description | Default Value
    background-color | color | hero background color | #ffffff
    background-height | px | height of the image used |  mandatory | none
    background-position | top/center/bottom left/center/right | background image position | center center
    background-url | url | absolute background url | n/a
    background-width | px | width of the image used |  mandatory | parent element width
    border-radius | px | border radius | n/a
    height | px | hero section height (required for fixed-height mode) | 0px
    mode | fluid-height/fixed-height | choose if the height is fixed based on the height attribute or fluid | fluid-height
    padding | px | supports up to 4 parameters | 0px
    padding-bottom | px | bottom offset | 0px
    padding-left | px | left offset | 0px
    padding-right | px | right offset | 0px
    padding-top | px | top offset | 0px
    vertical-align | top/middle/bottom | content vertical alignment | top

    Notes:
    -

    Default:
      <mj-hero
        background-color="#ffffff"
        background-position="center center"
        height="0px"
        mode="fluid-height"
        padding="0px"
        padding-bottom="0px"
        padding-left="0px"
        padding-right="0px"
        padding-top="0px"
        vertical-align="top" (changed to middle)
      />

    Mandatory:
      background-width
      background-height
  -->
  <mj-hero
    background-width="600px"
    background-height="400px"
    background-color="#ffffff"
    background-position="center center"
    height="0px"
    mode="fluid-height"
    padding="0px"
    padding-bottom="0px"
    padding-left="0px"
    padding-right="0px"
    padding-top="0px"
    vertical-align="middle"
  />

  <!--
    Element: <mj-accordion>
    Description: Creates an interactive, collapsible accordion component. Users can click titles to reveal hidden content.
    Documentation: https://documentation.mjml.io/#mj-accordion

    Attributes:
    Attribute | Unit | Description | Default Value
    border | string | CSS border format | 2px solid black
    container-background-color | n/a | background-color of the cell | n/a
    css-class | string | class name, added to the root HTML element created | n/a
    font-family | n/a | font | Ubuntu, Helvetica, Arial, sans-serif
    icon-align | n/a | icon alignment | middle
    icon-height | px | icon width | 32px
    icon-position | n/a | display icon left or right | right
    icon-unwrapped-alt | n/a | alt text when accordion is unwrapped | -
    icon-unwrapped-url | n/a | icon when accordion is unwrapped | https://i.imgur.com/w4uTygT.png
    icon-width | px | icon height | 32px
    icon-wrapped-alt | n/a | alt text when accordion is wrapped | +
    icon-wrapped-url | n/a | icon when accordion is wrapped | https://i.imgur.com/bIXv1bk.png
    padding | px | padding | 10px 25px
    padding-bottom | px | padding bottom | n/a
    padding-left | px | padding left | n/a
    padding-right | px | padding right | n/a
    padding-top | px | padding top | n/a

    Notes:
    - Provides an interactive experience where supported (e.g., Apple Mail).
    - Includes a static fallback for clients that don't support interactivity.
    - Requires `<mj-accordion-element>`, `<mj-accordion-title>`, and `<mj-accordion-text>` as children.
    - `mj-accordion-text` and `mj-accordion-title` are "ending tags", which means they can contain HTML code which will be left as it is, so they can contain HTML tags with attributes, but they cannot contain other MJML components.

    Default:
      <mj-accordion
        border="2px solid black"
        font-family="Ubuntu, Helvetica, Arial, sans-serif"
        icon-align="middle"
        icon-height="32px"
        icon-position="right"
        icon-unwrapped-alt="close accordion"
        icon-unwrapped-url="https://refine.digital/wp-content/uploads/icons/bold/caret-up-bold.png"
        icon-width="32px"
        icon-wrapped-alt="open accordion"
        icon-wrapped-url="https://refine.digital/wp-content/uploads/icons/bold/caret-down-bold.png"
        padding="10px 25px"
    />

    ISSUE: Preview and possibly final COMP not working
  -->
  <mj-accordion
    border="2px solid black"
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    icon-align="middle"
    icon-height="32px"
    icon-width="32px"
    icon-position="right"
    icon-unwrapped-alt="close accordion"
    icon-unwrapped-url="https://refine.digital/wp-content/uploads/icons/bold/caret-up-bold.png"
    icon-wrapped-alt="open accordion"
    icon-wrapped-url="https://refine.digital/wp-content/uploads/icons/bold/caret-down-bold.png"
    padding="10px 25px"
  />

  <!--
    Element: <mj-accordion-element>
    Description: Creates an accordion title/text pair. An accordion can have any number of these pairs.
    Documentation: https://documentation.mjml.io/#mj-accordion

    Attributes:
      Attribute | Unit | Description | Default Value
      background-color | n/a | background color | n/a
      border | n/a | border | affects each horizontal border in the accordion except the top one
      css-class | string | class name, added to the root HTML element created | n/a
      font-family | n/a | font | Ubuntu, Helvetica, Arial, sans-serif
      icon-align | n/a | icon alignment | middle
      icon-height | n/a | icon width | 32px
      icon-position | n/a | display icon left or right | right
      icon-unwrapped-alt | n/a | alt text when accordion is unwrapped | -
      icon-unwrapped-url | n/a | icon when accordion is unwrapped | https://i.imgur.com/w4uTygT.png
      icon-width | n/a | icon height | 32px
      icon-wrapped-alt | n/a | alt text when accordion is wrapped | +
      icon-wrapped-url | n/a | icon when accordion is wrapped | https://i.imgur.com/bIXv1bk.png

      Notes:
      - Inheritance applies between attributes supported in both `mj-accordion` and `mj-accordion-element` unless `mj-accordion-element` overrides.

      Default:
        <mj-accordion-element
          border="none" (removed)
          font-family="Ubuntu, Helvetica, Arial, sans-serif"
          icon-align="middle"
          icon-height="32px"
          icon-position="right"
          icon-unwrapped-alt=""
          icon-unwrapped-url="https://i.imgur.com/Xvw0vjq.png"
          icon-width="32px"
          icon-wrapped-alt=""
          icon-wrapped-url="https://i.imgur.com/KKHenWa.png"
        />
    icon-unwrapped-alt="close accordion"
    icon-unwrapped-url="https://refine.digital/wp-content/uploads/icons/bold/caret-up-bold.png"
    icon-width="32px"
    icon-wrapped-alt="open accordion"
    icon-wrapped-url="https://refine.digital/wp-content/uploads/icons/bold/caret-down-bold.png"
  -->
  <mj-accordion-element
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    icon-align="middle"
    icon-height="32px"
    icon-position="right"
  />

  <!--
    Element: <mj-accordion-title>
    Description: The title in a title/text pair for <mj-accordion-element>.
    Documentation: https://documentation.mjml.io/#mj-accordion-title

    Attributes:
      Attribute | Unit | Description | Default Value
      background-color | n/a | background color | n/a
      color | n/a | text color | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      font-family | n/a | font family | Ubuntu, Helvetica, Arial, sans-serif
      font-size | px | font size | 13px
      padding | px | padding | 16px
      padding-bottom | px | padding bottom | n/a
      padding-left | px | padding left | n/a
      padding-right | px | padding right | n/a
      padding-top | px | padding top | n/a

    Notes:
      - Must be a direct child of `<mj-accordion-element>`.
      - Acts as the interactive trigger to expand/collapse the accordion text.

    Default:
      <mj-accordion-title
        font-family="Ubuntu, Helvetica, Arial, sans-serif"
        font-size="13px"
        padding="16px"
      />
  -->
  <mj-accordion-title
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    font-size="13px"
    padding="16px"
  />
  <!--
    Element: <mj-accordion-text>
    Description: Contains the content that is revealed when an accordion item is expanded.
    Documentation: https://documentation.mjml.io/#mj-accordion-text
    Additional Attributes:
      Attribute | Unit | Description | Default Value
      background-color | n/a | background color | n/a
      color | n/a | text color | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      font-family | n/a | font family | Ubuntu, Helvetica, Arial, sans-serif
      font-size | px | font size | 13px
      font-weight | number | text thickness | n/a
      letter-spacing | px,em | letter spacing | none
      line-height | px | space between the lines | 1
      padding | px | padding | 16px
      padding-bottom | px | padding bottom | n/a
      padding-left | px | padding left | n/a
      padding-right | px | padding right | n/a
      padding-top | px | padding top | n/a

    Notes:
    - Must be a direct child of `<mj-accordion-element>`.
    - Contains the hidden information of the accordion.

    Default:
      <mj-accordion-text
        font-family="Ubuntu, Helvetica, Arial, sans-serif"
        font-size="13px"
        letter-spacing="0px"
        line-height="1"
        padding="16px"
      />
-->
  <mj-accordion-text
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    font-size="13px"
    letter-spacing="0px"
    line-height="1"
    padding="16px"
  />



  <!--
    Element: <mj-carousel>
    Description: mj-carousel displays a gallery of images or "carousel". Readers can interact by hovering and clicking on thumbnails depending on the email client they use. This component enables you to set the styles of the carousel elements.
    Documentation: https://documentation.mjml.io/#mj-carousel

    Attributes:
      Attribute | Unit | Description | Default Value
      align | string | horizontal alignment | center
      container-background-color | string | column background color | none
      border-radius | px | border radius | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      icon-width | px | width of the icons on left and right of the main image | 44px
      left-icon | url | icon on the left of the main image | https://i.imgur.com/xTh3hln.png
      right-icon | url | icon on the right of the main image | https://i.imgur.com/os7o9kz.png
      tb-border | css border format | border of the thumbnails | none
      tb-border-radius | px | border-radius of the thumbnails | none
      tb-hover-border-color | string | css border color of the hovered thumbnail | none
      tb-selected-border-color | string | css border color of the selected thumbnail | none
      tb-width | px | thumbnail width | null
      thumbnails | String | display or not the thumbnails (visible | hidden)

    Notes:
      - Provides interactive image galleries in supported clients (e.g., Apple Mail).
      - Renders a static image stack or fallback for unsupported clients.
      - Each slide is defined by an `<mj-carousel-image>` child.
      - Compiler note: `container-background-color`, `tb-border-radius`, `tb-hover-border-color`, `tb-selected-border-color`, `tb-width` might behave unexpectedly or not reflect documented defaults in the compiled output.
      - `mj-carousel-image` is an "ending tag", which means it can contain HTML code which will be left as it is, so it can contain HTML tags with attributes, but it cannot contain other MJML components.

    Default:
      <mj-carousel
        align="center"
        icon-width="44px"
        left-icon="https://refine.digital/wp-content/uploads/icons/bold/caret-left-bold.png"
        right-icon="https://refine.digital/wp-content/uploads/icons/bold/caret-right-bold.png"
        tb-border="none"
        thumbnails="hidden"
      />
  -->
  <mj-carousel
    align="center"
    icon-width="44px"
    left-icon="https://refine.digital/wp-content/uploads/icons/bold/caret-left-bold.png"
    right-icon="https://refine.digital/wp-content/uploads/icons/bold/caret-right-bold.png"
    tb-border="none"
    thumbnails="visible"
  />
  <!--
    Element: <mj-carousel-image>
    Description: This component enables you to add and style the images in the carousel.
    Documentation: https://documentation.mjml.io/#mj-carousel-image

    Attributes:
      Attribute | Unit | Description | Default Value
      alt | string | image description | ''
      css-class | string | class name, added to the root HTML element created | n/a
      href | url | link to redirect to on click | n/a
      rel | string | specify the rel attribute | n/a
      src | url | image source | n/a
      target | string | link target on click | _blank
      thumbnails-src | url | image source to have a thumbnail different than the image it's linked to | null
      title | string | tooltip & accessibility | n/a

    Notes:
    - Must be a direct child of `<mj-carousel>`.
    - `thumbnails-src` can be used to provide a different image for the thumbnail navigation.

    Default:
      <mj-carousel-image
        alt=""
        target="_blank"
      />
  -->
  <mj-carousel-image
    alt=""
    target="_blank"
  />

  <!--
    Element: <mj-navbar>
    Description: Displays a menu for navigation with an optional hamburger mode for mobile devices.
    Documentation: https://documentation.mjml.io/#mj-navbar
    Attributes:
      Attribute | Unit | Description | Default Value
      align | string | align content left/center/right | center
      base url | string | base url for children components | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      hamburger | string | activate the hamburger navigation on mobile if the value is hamburger | n/a
      ico-align | string | hamburger icon alignment, left/center/right (hamburger mode required) | center
      ico-close | ASCII code decimal | char code for a custom close icon (hamburger mode required) | 8855
      ico-color | color format | hamburger icon color (hamburger mode required) | #000000
      ico-font-family | string | hamburger icon font (only on hamburger mode) | Ubuntu, Helvetica, Arial, sans-serif
      ico-font-size | px | hamburger icon size (hamburger mode required) | 30px
      ico-line-height | px | hamburger icon line height (hamburger mode required) | 30px
      ico-open | ASCII code decimal | char code for a custom open icon (hamburger mode required) | 9776
      ico-padding | px | hamburger icon padding, supports up to 4 parameters (hamburger mode required) | 10px
      ico-padding-bottom | px | hamburger icon bottom offset (hamburger mode required) | 10px
      ico-padding-left | px | hamburger icon left offset (hamburger mode required) | 10px
      ico-padding-right | px | hamburger icon right offset (hamburger mode required) | 10px
      ico-padding-top | px | hamburger icon top offset (hamburger mode required) | 10px
      ico-text-decoration | string | hamburger icon text decoration none/underline/overline/line-through (hamburger mode required) | none
      ico-text-transform | string | hamburger icon text transformation none/capitalize/uppercase/lowercase (hamburger mode required) | none


      base-url | string | base url for children components | n/a
      css-class | string | class name, added to the root HTML element created | n/a
      hamburger | string | activate the hamburger navigation on mobile if the value is hamburger | n/a
      ico-text-decoration | string | hamburger icon text decoration none/underline/overline/line-through (hamburger mode required) | none
      ico-text-transform | string | hamburger icon text transformation none/capitalize/uppercase/lowercase (hamburger mode required) | none

    Notes:
      - Provides a mobile-friendly navigation experience.
      - Uses `<mj-navbar-link>` as its children for individual navigation items.
      - The "hamburger" feature only work on mobile device with all iOS mail client, for others mail clients the render is performed on an normal way, the links are displayed inline and the hamburger is not visible.
      - Individual links of the menu should be wrapped inside mj-navbar.
      - All the attributes prefixed with ico- help to customize the hamburger icon. They only work with the hamburger mode enabled.
      - Default hamburger icons for open "â˜°" and close "âŠ—" is working using unicode characters. No need to set ico-open/close/font-family
      - Hamburger icons can be changed using a specific ico-font/open/close

    Default:
      <mj-navbar
        align="center"
        ico-align="center"
        ico-close="8855" (if unset then "âŠ—" is used)
        ico-color="#000000"
        ico-font-family="Ubuntu, Helvetica, Arial, sans-serif" (Not correct )
        ico-font-size="30px"
        ico-line-height="30px"
        ico-open="9776" (if unset then "â˜°" is used)
        ico-padding="10px"
        ico-padding-bottom="10px"
        ico-padding-left="10px"
        ico-padding-right="10px"
        ico-padding-top="10px"
        ico-text-decoration="none"
        ico-text-transform="none"
      />
  -->
  <mj-navbar
    align="center"
    ico-align="center"
    ico-color="#000000"
    ico-font-size="30px"
    ico-line-height="30px"
    ico-padding="10px"
    ico-padding-bottom="10px"
    ico-padding-left="10px"
    ico-padding-right="10px"
    ico-padding-top="10px"
    ico-text-decoration="none"
    ico-text-transform="none"
  />
  <!--
    Element: <mj-navbar-link>
    Description: This component should be used to display an individual link in the navbar.
    Documentation: https://documentation.mjml.io/#mj-navbar-link

    Attributes:
      Attribute | Unit | Description | Default Value
      color | color | text color | #000000
      css-class | string | class name, added to the root HTML element created | n/a
      font-family | string | font | Ubuntu, Helvetica, Arial, sans-serif
      font-size | px | text size | 13px
      font-style | string | normal/italic/oblique | n/a
      font-weight | number | text thickness | n/a
      href | string | link to redirect to on click | n/a
      letter-spacing | px,em | letter-spacing | n/a
      line-height | px | space between the lines | 22px
      padding | px | supports up to 4 parameters | 15px 10px
      padding-bottom | px | bottom offset | n/a
      padding-left | px | left offset | n/a
      padding-right | px | right offset | n/a
      padding-top | px | top offset | n/a
      rel | string | specify the rel attribute | n/a
      target | string | link target on click | n/a
      text-decoration | string | underline/overline/none | n/a
      text-transform | string | capitalize/uppercase/lowercase/none | uppercase

    Notes:
      - Must be a direct child of `<mj-navbar>`.
      - The mj-navbar-link component must be used inside a mj-navbar component only.
      - `mj-navbar-link` is an "ending tag", which means it can contain HTML code which will be left as it is, so it can contain HTML tags with attributes, but it cannot contain other MJML components.

    Default:
      <mj-navbar-link
        color="#000000"
        font-family="Ubuntu, Helvetica, Arial, sans-serif"
        font-size="13px"
        line-height="22px"
        padding="15px 10px"
        text-transform="uppercase" (default changed)
      />
  -->
  <mj-navbar-link
    color="#000000"
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    font-size="13px"
    line-height="22px"
    padding="15px 10px"
    text-transform="none"
  />

  <!--
    Element: <mj-social>
    Description: Displays calls-to-action for various social networks with their associated logo. You can add social networks with the mj-social-element tag.
    Documentation: https://documentation.mjml.io/#mj-social
    Attributes:
      Attribute | Unit | Description | Default Value
      align | string | left/right/center | center
      border-radius | px | border radius | 3px
      color | color | text color | #333333
      css-class | string | class name, added to the root HTML element created | n/a
      container-background-color | color | inner element background color | n/a
      font-family | string | font name | Ubuntu, Helvetica, Arial, sans-serif
      font-size | px/em | font size | 13px
      font-style | string | font style | normal
      font-weight | string | font weight | normal
      icon-height | percent/px | icon height, overrides icon-size | icon-size
      icon-size | percent/px | icon size (width and height) | 20px
      inner-padding | px | social network surrounding padding | 4px
      line-height | percent/px | space between lines | 22px
      mode | string | vertical/horizontal | horizontal
      padding | px | supports up to 4 parameters | 10px 25px
      padding-bottom | px | bottom offset | n/a
      padding-left | px | left offset | n/a
      padding-right | px | right offset | n/a
      padding-top | px | top offset | n/a
      icon-padding | px | padding around the icons | 0px
      text-padding | px | padding around the texts | 4px 4px 4px 0
      text-decoration | string | underline/overline/none | none

    Notes:
      - Automatically generates responsive social icons with good client compatibility.
      - Uses `<mj-social-element>` children to define individual social links.
      - `mode="horizontal"` or `"vertical"` controls layout.
      - Compiler note: `target="_blank"` might be the effective default due to browser/client behavior for links, even if not explicitly documented for `mj-social` itself.
      - `mj-social-element`'s `name` attribute is a shortcut for some common social elements. You should avoid rely too much on this as those icons are hosted by Mailjet for their Email Builder. Use custom element syntax instead.
      - `mj-social-element` is an "ending tag", which means it can contain HTML code which will be left as it is, so it can contain HTML tags with attributes, but it cannot contain other MJML components.

    Default:
      <mj-social
        align="center"
        border-radius="3px"
        color="#333333"
        font-family="Ubuntu, Helvetica, Arial, sans-serif"
        font-size="13px"
        font-style="normal"
        font-weight="normal"
        icon-size="20px"
        inner-padding="4px"
        line-height="22px"
        mode="horizontal"
        padding="10px 25px"
        icon-padding="0px"
        text-padding="4px 4px 4px 0"
        text-decoration="none"
      />
-->
  <mj-social
    align="center"
    border-radius="3px"
    color="#333333"
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    font-size="13px"
    font-style="normal"
    font-weight="normal"
    icon-size="20px"
    inner-padding="4px"
    line-height="22px"
    mode="horizontal"
    padding="10px 25px"
    icon-padding="0px"
    text-padding="4px 4px 4px 0"
    text-decoration="none"
  />

<!--
    Element: <mj-social-element>
    Description: This component enables you to display a given social network inside mj-social.
    Documentation: https://documentation.mjml.io/#mj-social-element

    Attributes:
      Attribute | Unit | Description | Default Value
      align | string | left/right/center | center
      alt | string | image alt attribute | ''
      background-color | color | icon color | Each social name has its own default
      border-radius | px | border radius | 3px
      color | color | text color | #333333
      css-class | string | class name, added to the root HTML element created | n/a
      font-family | string | font name | Ubuntu, Helvetica, Arial, sans-serif
      font-size | px/em | font size | 13px
      font-style | string | font style | normal
      font-weight | string | font weight | normal
      href | url | button redirection url | none
      icon-height | percent/px | icon height, overrides icon-size | icon-size
      icon-size | percent/px | icon size (width and height) | 20px
      line-height | percent/px | space between lines | 22px
      name | string | social network name, see supported list below | N/A
      padding | px | supports up to 4 parameters | 4px
      padding-bottom | px | bottom offset | n/a
      padding-left | px | left offset | n/a
      padding-right | px | right offset | n/a
      padding-top | px | top offset | n/a
      icon-padding | px | padding around the icon | 0px
      icon-position | string | left/right | right
      text-padding | px | padding around the text | 4px 4px 4px 0
      sizes | media query & width | set icon width based on query | n/a
      src | url | image source | Each social name has its own default
      srcset | url & width | set a different image source based on the viewport | n/a
      rel | string | specify the rel attribute for the link | n/a
      target | string | link target | _blank
      title | string | img title attribute | none
      text-decoration | string | underline/overline/none | none
      vertical-align | string | top/middle/bottom | middle

      Notes:
      - Must be a direct child of `<mj-social>`.
      - Note that default icons are transparent, which allows background-color to actually be the icon color.
      - `name` attribute automatically selects predefined icon and background color, but can be overridden.
      - `src` can be used for custom icons.
      - Compiler note: `icon-position` default is `left` in docs, but might require explicit setting for consistent rendering across environments.
      - Supported networks with a share url: - facebook - twitter - x - google - pinterest - linkedin - tumblr - xing
        Without a share url: - github - instagram - web - snapchat - youtube - vimeo - medium - soundcloud - dribbble
        When using a network with share url, the href attribute will be inserted in the share url (i.e. https://www.facebook.com/sharer/sharer.php?u=[[URL]]). To keep your href unchanged, add -noshare to the network name. Example :
        <mj-social-element name="twitter-noshare" href="my-unchanged-url">Twitter</mj-social-element>
      - You can also use mj-social this way with no href attribute to make a simple list of inlined images-texts.
        Example:
        <mj-social-element href="url" background-color="#FF00FF" src="path-to-your-icon">
          Optional label
        </mj-social-element>

      Default:
        <mj-social-element
            align="center"
            alt=""
            border-radius="3px"
            color="#333333"
            font-family="Ubuntu, Helvetica, Arial, sans-serif"
            font-size="13px"
            font-style="normal"
            font-weight="normal"
            icon-size="20px"
            icon-padding="0px"
            line-height="22px"
            padding="4px"
            src=""
            target="_blank"
            text-padding="4px 4px 4px 0"
            vertical-align="middle"
          />
-->
 <mj-social-element
    align="center"
    alt=""
    border-radius="3px"
    color="#333333"
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    font-size="13px"
    font-style="normal"
    font-weight="normal"
    icon-size="20px"
    icon-padding="0px"
    line-height="22px"
    padding="4px"
    src=""
    target="_blank"
    text-padding="4px 4px 4px 0"
    vertical-align="middle"
  />

  <!--
    Special Elements
  -->
  <!--
    Element: <mj-all>
    Description: Applies attributes to all MJML components within the email, acting as a global style reset or baseline.
    Documentation: https://documentation.mjml.io/#mj-all
    Notes:
      - Use for universal font-family, color, or padding defaults across the entire email.
      - Attributes defined on specific components (e.g., <mj-text>) or `mj-class` will override `mj-all`.
  -->
<!--
  <mj-all
    font-family="Ubuntu, Helvetica, Arial, sans-serif"
    color="#000000"
  />
-->

</mj-attributes>